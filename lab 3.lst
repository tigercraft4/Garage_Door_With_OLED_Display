CCS PCM C Compiler, Version 4.104, 5967               07-Dec-21 13:05

               Filename: Z:\Volumes\Dados\IPCB\AnoLectivo_21_22\3A1S\Microcontroladores e Instrumentação\1_Projecto_final_\motor work\lab 3.lst

               ROM used: 251 words (3%)
                         Largest free fragment is 2048
               RAM used: 25 (7%) at main() level
                         26 (7%) worst case
               Stack:    2 worst case (1 in main + 1 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   050
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  MOVLW  8C
0018:  MOVWF  04
0019:  BTFSS  00.5
001A:  GOTO   01D
001B:  BTFSC  0C.5
001C:  GOTO   02E
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   20,W
0028:  MOVWF  0A
0029:  SWAPF  21,W
002A:  MOVWF  03
002B:  SWAPF  7F,F
002C:  SWAPF  7F,W
002D:  RETFIE
002E:  BCF    0A.3
002F:  BCF    0A.4
0030:  GOTO   031
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #fuses NOWDT,HS, NOPUT, NOPROTECT, NODEBUG, NOLVP, NOCPD, NOWRT, BROWNOUT 
.................... #device adc=10 
....................  
.................... #use delay(clock=20000000) 
*
003A:  MOVLW  34
003B:  MOVWF  04
003C:  BCF    03.7
003D:  MOVF   00,W
003E:  BTFSC  03.2
003F:  GOTO   04D
0040:  MOVLW  06
0041:  MOVWF  78
0042:  CLRF   77
0043:  DECFSZ 77,F
0044:  GOTO   043
0045:  DECFSZ 78,F
0046:  GOTO   042
0047:  MOVLW  7B
0048:  MOVWF  77
0049:  DECFSZ 77,F
004A:  GOTO   049
004B:  DECFSZ 00,F
004C:  GOTO   040
004D:  BCF    0A.3
004E:  BCF    0A.4
004F:  GOTO   08F (RETURN)
.................... #use RS232(baud=9600,xmit=Pin_C6,rcv=Pin_C7,Parity=N,Bits=8) 
.................... #define RS     PIN_E0 
.................... #define ENABLE PIN_E1 
.................... //#define LSB PIN_A2 
....................  
.................... int16 paberto,pfechado,c,estado; 
....................  
.................... #INT_RDA 
.................... void Interrupcao(){ 
....................    c=getchar(); 
*
0031:  BTFSS  0C.5
0032:  GOTO   031
0033:  MOVF   1A,W
0034:  CLRF   2C
0035:  MOVWF  2B
....................      
.................... } 
....................  
0036:  BCF    0C.5
0037:  BCF    0A.3
0038:  BCF    0A.4
0039:  GOTO   01D
.................... void verifica_portao(){ 
.................... if(pfechado==0){ 
....................      set_pwm1_duty(512); 
....................          } 
.................... if(paberto==0){set_pwm1_duty(512);} 
....................        
....................  
.................... } 
....................  
....................  
....................  
.................... void main() 
.................... { 
*
0050:  CLRF   04
0051:  BCF    03.7
0052:  MOVLW  1F
0053:  ANDWF  03,F
0054:  MOVLW  81
0055:  BSF    03.5
0056:  MOVWF  19
0057:  MOVLW  A6
0058:  MOVWF  18
0059:  MOVLW  90
005A:  BCF    03.5
005B:  MOVWF  18
005C:  BSF    03.5
005D:  BSF    1F.0
005E:  BSF    1F.1
005F:  BSF    1F.2
0060:  BCF    1F.3
0061:  MOVLW  07
0062:  MOVWF  1C
*
0066:  CLRF   33
0067:  CLRF   32
....................    int16 i,j=0; 
....................   enable_interrupts ( INT_RDA ) ; 
0068:  BSF    03.5
0069:  BSF    0C.5
....................       enable_interrupts ( global ) ; 
006A:  MOVLW  C0
006B:  BCF    03.5
006C:  IORWF  0B,F
....................    
....................  
....................  
....................    set_tris_d(0x00);//diz que sao saidas 
006D:  MOVLW  00
006E:  BSF    03.5
006F:  MOVWF  08
....................       setup_adc_ports(AN0); 
0070:  BCF    1F.0
0071:  BSF    1F.1
0072:  BSF    1F.2
0073:  BSF    1F.3
....................       setup_adc(ADC_clock_internal); 
0074:  BCF    1F.6
0075:  BCF    03.5
0076:  BSF    1F.6
0077:  BSF    1F.7
0078:  BSF    03.5
0079:  BSF    1F.7
007A:  BCF    03.5
007B:  BSF    1F.0
....................        
....................       setup_ccp1(ccp_pwm);// ccp1 pin c2 pwm1 
007C:  BCF    2F.2
007D:  MOVF   2F,W
007E:  BSF    03.5
007F:  MOVWF  07
0080:  BCF    03.5
0081:  BCF    07.2
0082:  MOVLW  0C
0083:  MOVWF  17
....................       setup_timer_2(t2_div_by_4,255,1); 
0084:  MOVLW  00
0085:  MOVWF  78
0086:  IORLW  05
0087:  MOVWF  12
0088:  MOVLW  FF
0089:  BSF    03.5
008A:  MOVWF  12
....................  
....................   while (1) 
....................    { 
....................       
....................       delay_ms(100); 
008B:  MOVLW  64
008C:  BCF    03.5
008D:  MOVWF  34
008E:  GOTO   03A
....................       set_adc_channel(0); 
008F:  MOVLW  00
0090:  MOVWF  78
0091:  MOVF   1F,W
0092:  ANDLW  C7
0093:  IORWF  78,W
0094:  MOVWF  1F
....................       delay_us(20); 
0095:  MOVLW  21
0096:  MOVWF  77
0097:  DECFSZ 77,F
0098:  GOTO   097
....................        
....................      pfechado=input(Pin_C3); 
0099:  BSF    2F.3
009A:  MOVF   2F,W
009B:  BSF    03.5
009C:  MOVWF  07
009D:  BCF    03.5
009E:  CLRF   29
009F:  BTFSC  07.3
00A0:  INCF   29,F
00A1:  MOVLW  00
....................      paberto=input(Pin_C4); 
00A2:  BSF    2F.4
00A3:  MOVF   2F,W
00A4:  BSF    03.5
00A5:  MOVWF  07
00A6:  BCF    03.5
00A7:  CLRF   27
00A8:  BTFSC  07.4
00A9:  INCF   27,F
00AA:  MOVLW  00
....................      
....................       
....................       
....................    // set_pwm1_duty(1); //8bits 0-255 10 bits 0-1023 
....................     
....................       
....................        
.................... //!     if(input(Pin_B4)==1){ 
.................... //!      set_pwm1_duty(1); 
.................... //!     } 
.................... //!     if(input(Pin_B5)==1){ 
.................... //!      set_pwm1_duty(1000); 
.................... //!     } 
.................... //!      
.................... //!     if(input(Pin_B6)==1){ 
.................... //!      set_pwm1_duty(512); 
.................... //!     } 
....................       
....................           if(c=='1'){ 
00AB:  MOVF   2B,W
00AC:  SUBLW  31
00AD:  BTFSS  03.2
00AE:  GOTO   0B7
00AF:  MOVF   2C,F
00B0:  BTFSS  03.2
00B1:  GOTO   0B7
....................       set_pwm1_duty(1); 
00B2:  MOVLW  01
00B3:  MOVWF  15
....................        c='3'; 
00B4:  CLRF   2C
00B5:  MOVLW  33
00B6:  MOVWF  2B
....................      } 
....................      
....................     // delay_us(1000); 
....................      
....................       
....................       
....................       
....................       if(c=='0'){ 
00B7:  MOVF   2B,W
00B8:  SUBLW  30
00B9:  BTFSS  03.2
00BA:  GOTO   0C6
00BB:  MOVF   2C,F
00BC:  BTFSS  03.2
00BD:  GOTO   0C6
....................       set_pwm1_duty(1000); 
00BE:  MOVLW  FA
00BF:  MOVWF  15
00C0:  MOVF   17,W
00C1:  ANDLW  CF
00C2:  MOVWF  17
....................        c='3'; 
00C3:  CLRF   2C
00C4:  MOVLW  33
00C5:  MOVWF  2B
....................      } 
....................         
....................       // delay_us(1000); 
....................        
.................... //!     if(input(Pin_B6)==1){ 
.................... //!      set_pwm1_duty(512); 
.................... //!     } 
....................       
....................       
....................      if(pfechado==0) 
00C6:  MOVF   29,F
00C7:  BTFSS  03.2
00C8:  GOTO   0D4
00C9:  MOVF   2A,F
00CA:  BTFSS  03.2
00CB:  GOTO   0D4
....................      { 
....................      set_pwm1_duty(512); 
00CC:  MOVLW  80
00CD:  MOVWF  15
00CE:  MOVF   17,W
00CF:  ANDLW  CF
00D0:  MOVWF  17
....................       c='3'; 
00D1:  CLRF   2C
00D2:  MOVLW  33
00D3:  MOVWF  2B
....................      } 
....................       if(paberto==0) 
00D4:  MOVF   27,F
00D5:  BTFSS  03.2
00D6:  GOTO   0E2
00D7:  MOVF   28,F
00D8:  BTFSS  03.2
00D9:  GOTO   0E2
....................       { 
....................        set_pwm1_duty(512); 
00DA:  MOVLW  80
00DB:  MOVWF  15
00DC:  MOVF   17,W
00DD:  ANDLW  CF
00DE:  MOVWF  17
....................         c='3'; 
00DF:  CLRF   2C
00E0:  MOVLW  33
00E1:  MOVWF  2B
....................       } 
....................    // verifica_portao(); 
....................      
....................      
....................      
....................     //c=getchar(); 
....................     if(c=='1'){output_HIGH( PIN_B0 ) ;} 
00E2:  MOVF   2B,W
00E3:  SUBLW  31
00E4:  BTFSS  03.2
00E5:  GOTO   0ED
00E6:  MOVF   2C,F
00E7:  BTFSS  03.2
00E8:  GOTO   0ED
00E9:  BSF    03.5
00EA:  BCF    06.0
00EB:  BCF    03.5
00EC:  BSF    06.0
....................    if(c=='0'){output_LOW( PIN_B0 ) ;} 
00ED:  MOVF   2B,W
00EE:  SUBLW  30
00EF:  BTFSS  03.2
00F0:  GOTO   0F8
00F1:  MOVF   2C,F
00F2:  BTFSS  03.2
00F3:  GOTO   0F8
00F4:  BSF    03.5
00F5:  BCF    06.0
00F6:  BCF    03.5
00F7:  BCF    06.0
....................      
....................  
....................  
....................      
....................      
....................    
....................      
....................      
....................      
....................      
....................      
....................      
....................      
.................... } 
00F8:  BSF    03.5
00F9:  GOTO   08B
....................  
....................  
....................  
....................  
....................  
....................  
....................  
....................  
....................  
....................  
....................      } 
....................      
....................  
....................     
....................  
....................  
00FA:  SLEEP

Configuration Fuses:
   Word  1: 3F7A   HS NOWDT NOPUT NODEBUG NOPROTECT BROWNOUT NOLVP NOCPD NOWRT
